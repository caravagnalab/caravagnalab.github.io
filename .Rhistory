# Make the plot
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_edge_diagonal(colour="grey") +
scale_edge_colour_distiller(palette = "RdPu") +
geom_node_point(aes(filter = leaf, x = x*1.07, y=y*1.07, colour=group, size=value, alpha=0.2)) +
scale_colour_manual(values= rep( brewer.pal(9,"Paired") , 30)) +
scale_size_continuous( range = c(0.1,10) ) +
theme_void() +
theme(
legend.position="none",
plot.margin=unit(c(0,0,0,0),"cm"),
)
# Make the plot
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
scale_edge_colour_distiller(palette = "RdPu") +
geom_node_point(aes(filter = leaf, x = x*1.07, y=y*1.07, colour=group, size=value, alpha=0.2)) +
scale_colour_manual(values= rep( brewer.pal(9,"Paired") , 30)) +
scale_size_continuous( range = c(0.1,10) ) +
theme_void() +
theme(
legend.position="none",
plot.margin=unit(c(0,0,0,0),"cm"),
)
# Make the plot
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_edge_diagonal2(colour="grey") +
scale_edge_colour_distiller(palette = "RdPu") +
geom_node_point(aes(filter = leaf, x = x*1.07, y=y*1.07, colour=group, size=value, alpha=0.2)) +
scale_colour_manual(values= rep( brewer.pal(9,"Paired") , 30)) +
scale_size_continuous( range = c(0.1,10) ) +
theme_void() +
theme(
legend.position="none",
plot.margin=unit(c(0,0,0,0),"cm"),
)
d1
d2
# Make the plot
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_edge_diagonal2(colour="grey") +
scale_edge_colour_distiller(palette = "RdPu") +
geom_node_point(aes(filter = leaf, x = x*1.07, y=y*1.07, colour=group, size=value, alpha=0.2)) +
scale_colour_manual(values= rep( brewer.pal(9,"Paired") , 30)) +
scale_size_continuous( range = c(0.1,10) ) +
theme_void() +
theme(
legend.position="none",
plot.margin=unit(c(0,0,0,0),"cm"),
) +
coord_fixed()
# Make the plot
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_edge_diagonal2(colour="grey") +
scale_edge_colour_distiller(palette = "RdPu") +
geom_node_point(aes(filter = leaf, x = x*1.07, y=y*1.07, colour=group, size=value/5, alpha=0.2)) +
scale_colour_manual(values= rep( brewer.pal(9,"Paired") , 30)) +
scale_size_continuous( range = c(0.1,10) ) +
theme_void() +
theme(
legend.position="none",
plot.margin=unit(c(0,0,0,0),"cm"),
) +
coord_fixed()
# Make the plot
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_edge_diagonal2(colour="black") +
scale_edge_colour_distiller(palette = "RdPu") +
geom_node_point(aes(filter = leaf, x = x*1.07, y=y*1.07, colour=group, size=value, alpha=0.2)) +
scale_colour_manual(values= rep( brewer.pal(9,"Paired") , 30)) +
scale_size_continuous( range = c(0.1,10) ) +
theme_void() +
theme(
legend.position="none",
plot.margin=unit(c(0,0,0,0),"cm"),
) +
coord_fixed()
# create a data frame giving the hierarchical structure of your individuals
d1=data.frame(from="origin", to=paste("group", seq(1,10), sep=""))
d2=data.frame(from=rep(d1$to, each=10), to=paste("subgroup", seq(1,10), sep="_"))
edges=rbind(d1, d2)
# create a vertices data.frame. One line per object of our hierarchy
vertices = data.frame(
name = unique(c(as.character(edges$from), as.character(edges$to))) ,
value = runif(111)
)
# Let's add a column with the group of each name. It will be useful later to color points
vertices$group = edges$from[ match( vertices$name, edges$to ) ]
#Let's add information concerning the label we are going to add: angle, horizontal adjustement and potential flip
#calculate the ANGLE of the labels
vertices$id=NA
myleaves=which(is.na( match(vertices$name, edges$from) ))
nleaves=length(myleaves)
vertices$id[ myleaves ] = seq(1:nleaves)
vertices$angle= 90 - 360 * vertices$id / nleaves
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
vertices$hjust<-ifelse( vertices$angle < -90, 1, 0)
# flip angle BY to make them readable
vertices$angle<-ifelse(vertices$angle < -90, vertices$angle+180, vertices$angle)
# Create a graph object
mygraph <- graph_from_data_frame( edges, vertices=vertices )
# Make the plot
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_edge_diagonal2(colour="black") +
scale_edge_colour_distiller(palette = "RdPu") +
geom_node_point(aes(filter = leaf, x = x*1.07, y=y*1.07, colour=group, size=value, alpha=0.2)) +
scale_colour_manual(values= rep( brewer.pal(9,"Paired") , 30)) +
scale_size_continuous( range = c(0.1,10) ) +
theme_void() +
theme(
legend.position="none",
plot.margin=unit(c(0,0,0,0),"cm"),
) +
coord_fixed()
# create a data frame giving the hierarchical structure of your individuals
d1=data.frame(from="origin", to=paste("group", seq(1,10), sep=""))
d2=data.frame(from=rep(d1$to, each=10), to=paste("subgroup", seq(1,10), sep="_"))
edges=rbind(d1, d2)
# create a data frame giving the hierarchical structure of your individuals
d1=data.frame(from="origin", to=paste("group", seq(1,10), sep=""))
d2=data.frame(from=rep(d1$to, each=10), to=paste("subgroup", seq(1,100), sep="_"))
edges=rbind(d1, d2)
# create a vertices data.frame. One line per object of our hierarchy
vertices = data.frame(
name = unique(c(as.character(edges$from), as.character(edges$to))) ,
value = runif(111)
)
# Let's add a column with the group of each name. It will be useful later to color points
vertices$group = edges$from[ match( vertices$name, edges$to ) ]
#Let's add information concerning the label we are going to add: angle, horizontal adjustement and potential flip
#calculate the ANGLE of the labels
vertices$id=NA
myleaves=which(is.na( match(vertices$name, edges$from) ))
nleaves=length(myleaves)
vertices$id[ myleaves ] = seq(1:nleaves)
vertices$angle= 90 - 360 * vertices$id / nleaves
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
vertices$hjust<-ifelse( vertices$angle < -90, 1, 0)
# flip angle BY to make them readable
vertices$angle<-ifelse(vertices$angle < -90, vertices$angle+180, vertices$angle)
# Create a graph object
mygraph <- graph_from_data_frame( edges, vertices=vertices )
# Make the plot
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_edge_diagonal2(colour="black") +
scale_edge_colour_distiller(palette = "RdPu") +
geom_node_point(aes(filter = leaf, x = x*1.07, y=y*1.07, colour=group, size=value, alpha=0.2)) +
scale_colour_manual(values= rep( brewer.pal(9,"Paired") , 30)) +
scale_size_continuous( range = c(0.1,10) ) +
theme_void() +
theme(
legend.position="none",
plot.margin=unit(c(0,0,0,0),"cm"),
) +
coord_fixed()
# Make the plot
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_edge_elbow() +
scale_edge_colour_distiller(palette = "RdPu") +
geom_node_point(aes(filter = leaf, x = x*1.07, y=y*1.07, colour=group, size=value, alpha=0.2)) +
scale_colour_manual(values= rep( brewer.pal(9,"Paired") , 30)) +
scale_size_continuous( range = c(0.1,10) ) +
theme_void() +
theme(
legend.position="none",
plot.margin=unit(c(0,0,0,0),"cm"),
) +
coord_fixed()
dendrogram <- as.dendrogram(hclust(dist(iris[, 1:4])))
ggraph(dendrogram, 'dendrogram', circular = TRUE) +
geom_edge_elbow() +
coord_fixed()
ggraph(dendrogram, 'dendrogram', circular = TRUE) +
geom_edge_elbow() +
coord_fixed() +
theme_void()
dendrogram <- as.dendrogram(hclust(dist(iris[, 1:2])))
ggraph(dendrogram, 'dendrogram', circular = TRUE) +
geom_edge_elbow() +
coord_fixed() +
theme_void()
dendrogram <- as.dendrogram(hclust(dist(iris[, 1:7])))
iris
dendrogram <- as.dendrogram(hclust(dist(iris[, 1:4])))
ggraph(dendrogram, 'dendrogram', circular = TRUE) +
geom_edge_elbow() +
coord_fixed() +
theme_void()
load("~/Documents/Github/revolver.misc/vignette_TRACERx_Hanjani_et_al/TRACERx-jackknife.RData")
cohort
cohort$cluster$dendogram
ggraph(cohort$cluster$dendogram, 'dendrogram', circular = TRUE) +
geom_edge_elbow() +
coord_fixed() +
theme_void()
wflow = c("R-CMD-check", "pkgdown")
tmp_cmd1 = "https://github.com/caravagnalab/PKG/workflows/WKF/badge.svg"
tmp_cmd2 = "https://github.com/caravagnalab/PKG/actions/workflows/WKF.yaml"
gsub("PKG", repo, tmp_cmd1)
repo='revolver'
gsub("PKG", repo, tmp_cmd1)
w=wflow[1]
w
lnfy = function(w, l){
paste("![", w, "](", l, ")")
}
link = function(w, l){ paste("![", w, "](", l, ")") }
badge = link(w, gsub("WKF", w, tmp_cmd1))
badge
tmp_cmd1 = "https://github.com/caravagnalab/PKG/workflows/WKF/badge.svg"
tmp_cmd2 = "https://github.com/caravagnalab/PKG/actions/workflows/WKF.yaml"
tmp_cmd1 = gsub("PKG", repo, tmp_cmd1)
tmp_cmd2 = gsub("PKG", repo, tmp_cmd2)
badge = link(w, gsub("WKF", w, tmp_cmd1))
badge
badge_link = link(badge, gsub("WKF", w, tmp_cmd2))
badge_link
link = function(w, l){ paste("[", w, "](", l, ")") }
wflow = c("R-CMD-check", "pkgdown")
tmp_cmd1 = "https://github.com/caravagnalab/PKG/workflows/WKF/badge.svg"
tmp_cmd2 = "https://github.com/caravagnalab/PKG/actions/workflows/WKF.yaml"
tmp_cmd1 = gsub("PKG", repo, tmp_cmd1)
tmp_cmd2 = gsub("PKG", repo, tmp_cmd2)
wflows = c()
for(w in wflow)
badge = link(w, gsub("WKF", w, tmp_cmd1))
badge_link = link(badge, gsub("WKF", w, tmp_cmd2))
badge_link
badge = paste0("!", link(w, gsub("WKF", w, tmp_cmd1)))
badge_link = link(badge, gsub("WKF", w, tmp_cmd2))
badge_link
link = function(w, l){ paste0("[", w, "](", l, ")") }
wflow = c("R-CMD-check", "pkgdown")
tmp_cmd1 = "https://github.com/caravagnalab/PKG/workflows/WKF/badge.svg"
tmp_cmd2 = "https://github.com/caravagnalab/PKG/actions/workflows/WKF.yaml"
tmp_cmd1 = gsub("PKG", repo, tmp_cmd1)
tmp_cmd2 = gsub("PKG", repo, tmp_cmd2)
wflows = c()
badge = paste0("!", link(w, gsub("WKF", w, tmp_cmd1)))
badge_link = link(badge, gsub("WKF", w, tmp_cmd2))
badge_link
wflows = c()
for(w in wflow)
{
badge = paste0("!", link(w, gsub("WKF", w, tmp_cmd1)))
badge_link = link(badge, gsub("WKF", w, tmp_cmd2))
wflows = c(wflows, badge_link)
}
wflows
www = "https://caravagnalab.github.io/PKG/"
link(repo, gsub("WKF", rep, www))
www
link(repo, gsub("WKF", repo, www))
link(repo, gsub("PKG", repo, www))
RCurl::url.exists(gsub("PKG", repo, www))
RCurl::url.exists(gsub("PKG", 'aassa', www))
link = function(w, l) {
if (!RCurl::url.exists(l))
return(w)
paste0("[", w, "](", l, ")")
}
wflow = c("R-CMD-check", "pkgdown")
tmp_cmd1 = "https://github.com/caravagnalab/PKG/workflows/WKF/badge.svg"
tmp_cmd2 = "https://github.com/caravagnalab/PKG/actions/workflows/WKF.yaml"
www = "https://caravagnalab.github.io/PKG/"
tmp_cmd1 = gsub("PKG", repo, tmp_cmd1)
tmp_cmd2 = gsub("PKG", repo, tmp_cmd2)
wflows = c()
badge = paste0("!", link(w, gsub("WKF", w, tmp_cmd1)))
badge_link = link(badge, gsub("WKF", w, tmp_cmd2))
badge_link
link
w
link(w, gsub("WKF", w, tmp_cmd1)
link(w, gsub("WKF", w, tmp_cmd1))
link(w, gsub("WKF", w, tmp_cmd1))
badge = paste0("!", link(w, gsub("WKF", w, tmp_cmd1)))
badge_link = link(badge, gsub("WKF", w, tmp_cmd2))
wflows = c()
for(w in wflow)
{
badge = paste0("!", link(w, gsub("WKF", w, tmp_cmd1)))
badge_link = link(badge, gsub("WKF", w, tmp_cmd2))
wflows = c(wflows, badge_link)
}
link(repo, gsub("PKG", repo, www))
www = link(repo, gsub("PKG", repo, www))
www
c(www, wflows)
paste(
c(www, wflows), collapse = "|"
)
paste(
c(www, wflows), collapse = "|"
)
badges_markdown = function(repo)
{
link = function(w, l) {
if (!RCurl::url.exists(l))
return(w)
paste0("[", w, "](", l, ")")
}
wflow = c("R-CMD-check", "pkgdown")
# Badge template
tmp_cmd1 = "https://github.com/caravagnalab/PKG/workflows/WKF/badge.svg"
tmp_cmd2 = "https://github.com/caravagnalab/PKG/actions/workflows/WKF.yaml"
tmp_cmd1 = gsub("PKG", repo, tmp_cmd1)
tmp_cmd2 = gsub("PKG", repo, tmp_cmd2)
# Homepage
www = "https://caravagnalab.github.io/PKG/"
www = link(repo, gsub("PKG", repo, www))
# Workflows
wflows = c()
for(w in wflow)
{
badge = paste0("!", link(w, gsub("WKF", w, tmp_cmd1)))
badge_link = link(badge, gsub("WKF", w, tmp_cmd2))
wflows = c(wflows, badge_link)
}
paste(
c(www, wflows), collapse = "|"
)
}
badges_markdown = function(repo)
{
link = function(w, l) {
if (!RCurl::url.exists(l))
return(w)
paste0("[", w, "](", l, ")")
}
wflow = c("R-CMD-check", "pkgdown")
# Badge template
tmp_cmd1 = "https://github.com/caravagnalab/PKG/workflows/WKF/badge.svg"
tmp_cmd2 = "https://github.com/caravagnalab/PKG/actions/workflows/WKF.yaml"
tmp_cmd1 = gsub("PKG", repo, tmp_cmd1)
tmp_cmd2 = gsub("PKG", repo, tmp_cmd2)
# Homepage
www = "https://caravagnalab.github.io/PKG/"
www = link(repo, gsub("PKG", repo, www))
# Workflows
wflows = c()
for(w in wflow)
{
badge = paste0("!", link(w, gsub("WKF", w, tmp_cmd1)))
badge_link = link(badge, gsub("WKF", w, tmp_cmd2))
wflows = c(wflows, badge_link)
}
paste(
c(www, wflows), collapse = "|"
)
}
badges_markdown("CNAqc")
wflow = c("R-CMD-check", "pkgdown")
# Badge template
tmp_cmd1 = "https://github.com/caravagnalab/PKG/workflows/WKF/badge.svg"
tmp_cmd2 = "https://github.com/caravagnalab/PKG/actions/workflows/WKF.yaml"
tmp_cmd1 = gsub("PKG", repo, tmp_cmd1)
tmp_cmd2 = gsub("PKG", repo, tmp_cmd2)
# Homepage
www = "https://caravagnalab.github.io/PKG/"
www = link(repo, gsub("PKG", repo, www))
# Workflows
wflows = c()
for(w in wflow)
{
badge = paste0("!", link(w, gsub("WKF", w, tmp_cmd1)))
badge_link = link(badge, gsub("WKF", w, tmp_cmd2))
wflows = c(wflows, badge_link)
}
list(www, wflows)
append(list(www), wflows)
pool = append(list(www), wflows)
names(pool) = c("Homepage", wflow)
pool
badges_markdown = function(repo)
{
link = function(w, l) {
if (!RCurl::url.exists(l))
return(w)
paste0("[", w, "](", l, ")")
}
wflow = c("R-CMD-check", "pkgdown")
# Badge template
tmp_cmd1 = "https://github.com/caravagnalab/PKG/workflows/WKF/badge.svg"
tmp_cmd2 = "https://github.com/caravagnalab/PKG/actions/workflows/WKF.yaml"
tmp_cmd1 = gsub("PKG", repo, tmp_cmd1)
tmp_cmd2 = gsub("PKG", repo, tmp_cmd2)
# Homepage
www = "https://caravagnalab.github.io/PKG/"
www = link(repo, gsub("PKG", repo, www))
# Workflows
wflows = c()
for(w in wflow)
{
badge = paste0("!", link(w, gsub("WKF", w, tmp_cmd1)))
badge_link = link(badge, gsub("WKF", w, tmp_cmd2))
wflows = c(wflows, badge_link)
}
pool = append(list(www), wflows)
names(pool) = c("Homepage", wflow)
}
packages = c("BMix", "CNAqc", "ctree", "mobster", "mtree", "Rcongas", "revolver", "TINC", "VIBER")
packages = lapply(packages, badges_markdown)
packages
badges_markdown = function(repo)
{
link = function(w, l) {
if (!RCurl::url.exists(l))
return(w)
paste0("[", w, "](", l, ")")
}
wflow = c("R-CMD-check", "pkgdown")
# Badge template
tmp_cmd1 = "https://github.com/caravagnalab/PKG/workflows/WKF/badge.svg"
tmp_cmd2 = "https://github.com/caravagnalab/PKG/actions/workflows/WKF.yaml"
tmp_cmd1 = gsub("PKG", repo, tmp_cmd1)
tmp_cmd2 = gsub("PKG", repo, tmp_cmd2)
# Homepage
www = "https://caravagnalab.github.io/PKG/"
www = link(repo, gsub("PKG", repo, www))
# Workflows
wflows = c()
for(w in wflow)
{
badge = paste0("!", link(w, gsub("WKF", w, tmp_cmd1)))
badge_link = link(badge, gsub("WKF", w, tmp_cmd2))
wflows = c(wflows, badge_link)
}
pool = append(list(www), wflows)
names(pool) = c("Homepage", wflow)
pool
}
# Packages
packages = c("BMix", "CNAqc", "ctree", "mobster", "mtree", "Rcongas", "revolver", "TINC", "VIBER")
packages = lapply(packages, badges_markdown)
packages
# Header
names(packages[1])
# Header
names(packages[[1]])
# Header
columns = names(packages[[1]])
paste(columns, sep = " | ")
# Header
columns = names(packages[[1]])
paste(columns, sep = " | ")
paste(columns, collapse =  = " | ")
paste(columns, collapse =  " | ")
paste(columns, collapse =  " | ", '\n')
# Newline
nl = length(packages[[1]])
# Newline
nl = rep('----', length(packages[[1]]))
nl = paste(nl, collapse =  " | ")
nl
# Newline
nl = rep('----', length(packages[[1]]))
nl = paste0(nl, collapse =  " | ")
packages
x = packages[[1]]
x
paste0(
x, collapse = "|"
)
paste0(
x, collapse = " |"
)
#
sapply(packages, function(x){
paste0(
x, collapse = " |"
)
})
#
sapply(packages, function(x){
paste0(
x, collapse = " |"
)
})
# Header
columns = names(packages[[1]])
columns = paste(columns, collapse =  " | ")
# Newline
nl = rep('----', length(packages[[1]]))
nl = paste0(nl, collapse =  " | ")
# Badges/links
badges = sapply(packages, function(x){
paste0(
x, collapse = " |"
)
})
badges
c(
columns,
nl,
badges,
nl)
# Table
markdown_table = paste(
c(
columns,
nl,
badges,
nl),
collapse = '\n'
)
markdown_table
cat(markdown_table)
source('~/Documents/GitHub/caravagn.github.io/badges_markdown.R', echo=TRUE)
markdown_table
cat(markdown_table)
